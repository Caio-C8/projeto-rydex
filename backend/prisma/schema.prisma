datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum StatusEntregadores {
  offline
  online
  em_entrega

  @@map("status_entregadores")
}

enum StatusSolicitacoes {
  pendente
  atribuida
  cancelada

  @@map("status_solicitacoes")
}

enum StatusEntregas {
  em_andamento
  finalizada
  cancelada

  @@map("status_entregas")
}

model Entregador {
  id                             Int                                    @id @default(autoincrement())
  nome                           String
  data_nascimento                DateTime                               @db.Date
  cpf                            String                                 @unique
  email                          String                                 @unique
  senha                          String
  saldo                          Int                                    @default(0)
  celular                        String
  status                         StatusEntregadores                     @default(offline)
  placa_veiculo                  String
  arquivo_cnh_id                 Int
  arquivo_doc_veiculo_id         Int
  latitude                       Float?
  longitude                      Float?
  localizacao                    Unsupported("geography(Point, 4326)")?
  ultima_atualizacao_localizacao DateTime?
  chave_pix                      String

  entregas Entregas[]
  Arquivos Arquivos[]

  @@map("entregadores")
}

model Empresa {
  id               Int     @id @default(autoincrement())
  nome_empresa     String
  cnpj             String  @unique
  email            String  @unique
  senha            String
  saldo            Int     @default(0)
  cep              String
  cidade           String
  numero           Int
  bairro           String
  logradouro       String
  complemento      String?
  ponto_referencia String?
  latitude         Float?
  longitude        Float?

  solicitacoes_entregas SolicitacoesEntregas[]

  @@map("empresas")
}

model SolicitacoesEntregas {
  id                     Int                @id @default(autoincrement())
  valor_estimado         Int
  item_retorno           Boolean            @default(false)
  descricao_item_retorno String?
  observacao             String?
  distancia_m            Int?
  status                 StatusSolicitacoes @default(pendente)
  criado_em              DateTime           @default(now()) @db.Timestamp()
  cancelado_em           DateTime?
  cep                    String
  cidade                 String
  numero                 Int
  bairro                 String
  logradouro             String
  complemento            String?
  ponto_referencia       String?
  latitude               Float?
  longitude              Float?

  empresa_id Int
  empresa    Empresa   @relation(fields: [empresa_id], references: [id])
  entrega    Entregas?

  @@map("solicitacoes_entregas")
}

model Entregas {
  id            Int            @id @default(autoincrement())
  valor_entrega Int
  aceito_em     DateTime?
  criado_em     DateTime       @default(now()) @db.Timestamp()
  cancelado_em  DateTime?
  status        StatusEntregas @default(em_andamento)

  solicitacao_entrega_id Int @unique
  entregador_id          Int

  solicitacao_entrega SolicitacoesEntregas @relation(fields: [solicitacao_entrega_id], references: [id])
  entregador          Entregador           @relation(fields: [entregador_id], references: [id])

  @@map("entregas")
}

model Arquivos {
  id            Int         @id @default(autoincrement())
  nome          String
  caminho       String
  entregador_id Int?
  entregador    Entregador? @relation(fields: [entregador_id], references: [id])

  @@map("arquivos")
}

// model Configuracoes {
//   id            Int      @id @default(autoincrement())
//   chave         String   @unique
//   descricao     String?
//   valor_int     Int?
//   valor_string  String?
//   valor_boolean Boolean?

//   @@map("configuracoes")
// }
