generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Entregador {
  id                             Int                       @id @default(autoincrement())
  nome                           String                    @db.VarChar(255)
  data_nascimento                DateTime                  @db.Date
  cpf                            String                    @unique @db.VarChar(14)
  email                          String                    @unique @db.VarChar(255)
  senha                          String
  saldo                          Int                       @default(0)
  celular                        String                    @db.VarChar(15)
  status                         StatusEntregadores        @default(offline)
  placa_veiculo                  String                    @db.VarChar(100)
  latitude                       Float?
  longitude                      Float?
  localizacao                    Unsupported("geography")?
  ultima_atualizacao_localizacao DateTime?                 @db.Timestamp(6)
  chave_pix                      String                    @db.VarChar(100)
  Arquivos                       Arquivos[]
  entregas                       Entregas[]

  @@map("entregadores")
}

model Empresa {
  id                    Int                       @id @default(autoincrement())
  nome_empresa          String                    @db.VarChar(255)
  cnpj                  String                    @unique @db.VarChar(18)
  email                 String                    @unique @db.VarChar(255)
  senha                 String
  saldo                 Int                       @default(0)
  cep                   String                    @db.VarChar(10)
  cidade                String                    @db.VarChar(255)
  numero                Int
  bairro                String                    @db.VarChar(255)
  logradouro            String                    @db.VarChar(255)
  complemento           String?                   @db.VarChar(255)
  ponto_referencia      String?                   @db.VarChar(255)
  latitude              Float?
  longitude             Float?
  localizacao           Unsupported("geography")?
  solicitacoes_entregas SolicitacoesEntregas[]

  @@map("empresas")
}

model SolicitacoesEntregas {
  id                     Int                       @id @default(autoincrement())
  valor_estimado         Int
  item_retorno           Boolean                   @default(false)
  descricao_item_retorno String?
  observacao             String?
  distancia_m            Int?
  status                 StatusSolicitacoes        @default(pendente)
  criado_em              DateTime                  @default(now()) @db.Timestamp(6)
  cancelado_em           DateTime?                 @db.Timestamp(6)
  cep                    String                    @db.VarChar(10)
  cidade                 String                    @db.VarChar(150)
  numero                 Int
  bairro                 String                    @db.VarChar(150)
  logradouro             String                    @db.VarChar(150)
  complemento            String?                   @db.VarChar(150)
  ponto_referencia       String?                   @db.VarChar(150)
  latitude               Float?
  longitude              Float?
  localizacao            Unsupported("geography")?
  empresa_id             Int
  entrega                Entregas?
  empresa                Empresa                   @relation(fields: [empresa_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_empresa")

  @@map("solicitacoes_entregas")
}

model Entregas {
  id                     Int                  @id @default(autoincrement())
  valor_entrega          Int
  aceito_em              DateTime?            @db.Timestamp(6)
  criado_em              DateTime             @default(now()) @db.Timestamp(6)
  cancelado_em           DateTime?            @db.Timestamp(6)
  status                 StatusEntregas       @default(em_andamento)
  solicitacao_entrega_id Int                  @unique
  entregador_id          Int
  entregador             Entregador           @relation(fields: [entregador_id], references: [id], onUpdate: NoAction, map: "fk_entregador_entrega")
  solicitacao_entrega    SolicitacoesEntregas @relation(fields: [solicitacao_entrega_id], references: [id], onUpdate: NoAction, map: "fk_solicitacao_entrega")

  @@map("entregas")
}

model Arquivos {
  id            Int         @id @default(autoincrement())
  nome          String      @db.VarChar(255)
  caminho       String
  entregador_id Int?
  entregador    Entregador? @relation(fields: [entregador_id], references: [id], onUpdate: NoAction, map: "fk_entregador")

  @@map("arquivos")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
}

enum StatusEntregadores {
  offline
  online
  em_entrega

  @@map("status_entregadores")
}

enum StatusSolicitacoes {
  pendente
  atribuida
  cancelada

  @@map("status_solicitacoes")
}

enum StatusEntregas {
  em_andamento
  finalizada
  cancelada

  @@map("status_entregas")
}
